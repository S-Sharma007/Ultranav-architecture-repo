pipeline {
    agent any
    
    tools {
        maven "maven"
        jdk 'jdk 17'   
    }
    
    environment {
        Sonar_Token = credentials('SONAR_TOKEN')
        Artifacts = credentials('jfrog-jenkinsuser_creds')

        

    }
    
    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', 
                url: 'https://github.com/S-Sharma007/Ultranav-architecture-repo.git',
                credentialsId: 'github_creds'  
            }
        }
        
        stage('Petclinic Build with Maven') {
            steps {
                sh 'mvn clean package -DskipTests=true -X' // Build only
                
            }
        }

        stage ('pushing to build to Jfrog artifactory') {
            steps {
                rtUpload (
                    serverId: 'Artifactory',  // Configured in Jenkins - MUST MATCH SERVER ID
                    spec: """
                        {
                          "files": [
                            {
                              "pattern": "target/*.jar",
                              "target": "${ARTIFACTORY_REPO}/${APP_NAME}/"
                            }
                          ]
                        }
                    """
                )
            }
        }

        stage ( 'build a docker image ') {
            steps {
                script {
                    sh "docker build -t petclinic ."
                    sh "docker tag petclinic:latest 194722422083.dkr.ecr.ap-southeast-2.amazonaws.com/petclinic:latest"
                }
            }
        }
        
        stage ('Push docker image to ECR'){
            steps {
                script { 
                    sh "docker push 194722422083.dkr.ecr.ap-southeast-2.amazonaws.com/petclinic:latest"
                }
            }
        }
    }
 }
